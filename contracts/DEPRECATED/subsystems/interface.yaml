components:
  - name: ApiGateway
    layer: interface
    package: app.interface.api
    responsibilities:
      - FastAPI app; OpenAPI; authn middleware; rate limit
      - Versioned API /v1; WS /v1/events
    provides:
      http:
        - { method: GET,  path: /v1/health, out: { status: 200, body: { ok: bool, version: string } } }
        - { method: POST, path: /v1/auth/token, in: application/json, out: { status: 200, body: { access_token: string, expires_in: int } } }
        - { method: POST, path: /v1/files, in: multipart/form-data, out: { status: 202, body: { job_id: string } }, invariants: ["file<=50MB"] }
        - { method: GET,  path: /v1/search, params: { q: string, limit: int=10 }, out: { status: 200, body: SearchResults } }
        - { method: GET,  path: /v1/jobs/{id}, out: { status: 200, body: JobStatus } }
      websockets:
        - { path: /v1/events, msg_in: ClientEvent, msg_out: ServerEvent }
    consumes:
      commands: [ { queue: ingestion-jobs, message: IndexJob } ]
    invariants:
      - "Bearer required except /health and /auth/token"
      - "Never call infrastructure adapters directly"
    forbidden_imports: [ app.infrastructure, app.domain ]

  - name: AdminApi
    layer: interface
    package: app.interface.admin
    responsibilities:
      - Admin endpoints (/v1/admin/*): suspend tenant, set plan, get usage
    provides:
      http:
        - { method: POST, path: /v1/admin/tenants/{id}/suspend, out: { status: 204 } }
        - { method: POST, path: /v1/admin/tenants/{id}/plan, in: application/json, out: { status: 204 } }
        - { method: GET,  path: /v1/admin/usage, params: { tenant_id: string? }, out: { status: 200, body: UsageReport } }
    invariants:
      - "Admin scope required"
